var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Chartmetric","category":"page"},{"location":"#Chartmetric","page":"Home","title":"Chartmetric","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Chartmetric.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Chartmetric]","category":"page"},{"location":"#Chartmetric.Request","page":"Home","title":"Chartmetric.Request","text":"Request(token::Token, url::String[, maxtries::Int, sleeptime::Number, state::Dict])\nRequest(refreshtoken::String, url::String[, maxtries::Int, sleeptime::Number])\n\nCreates a Request to be used with dorequest(...)\n\nArguments:\n\ntoken : the request Token\nurl : Chartmetric URL to be requested\n[maxtries] : maximum number of tries to get the request (default = token.maxtries)\n[sleeptime] : Time to wait after server error in seconds (default = 600)\n[state] : Metadata for a request. Allows multiple requests of the same variable with different offset.\nrefreshtoken : Chartmetric refreshtoken associated with your account\n\n\n\n\n\n","category":"type"},{"location":"#Chartmetric.Token","page":"Home","title":"Chartmetric.Token","text":"Token(refreshtoken::String)\n\nReturns a Token that can be used for requests.\n\nArguments:\n\nrefreshtoken : Refreshtoken associated with your Chartmetric account.\n\n\n\n\n\n","category":"type"},{"location":"#Chartmetric.dorequest-Tuple{Request}","page":"Home","title":"Chartmetric.dorequest","text":"dorequest(request::Request)\n\nRun the request using a Request object\n\nArguments:\n\nrequest : the Request object\nskip404 = true : If true 404 errors will not be retried\nverbose = false : If true all unusual events (e.g. rate limit is hit) will print a message\n\n\n\n\n\n","category":"method"},{"location":"#Chartmetric.getparsed","page":"Home","title":"Chartmetric.getparsed","text":"getparsed(tkn, path, parameters = nothing; kwargs...)\n\nDo a full request and return a Dict of the response. Keyword arguments are passed to Request and are maxtries and sleeptime.\n\nArguments:\n\ntoken: the request Token\npath: Chartmetric API path\nparameters=nothing: Chartmetric parameters of the form [\"limit=100\", \"since=2020-01-01\"] \nskip404 = true : If true 404 errors will not be retried\nverbose = false : If true all unusual events (e.g. rate limit is hit) will print a message\n\n\n\n\n\n","category":"function"},{"location":"#Chartmetric.newtoken!-Tuple{Token}","page":"Home","title":"Chartmetric.newtoken!","text":"newtoken!(token::Token; verbose = false)\n\nRefreshes an existing request Token\n\nArguments:\n\ntoken : the request Token\nverbose=false : print a message when a new token is requested\n\n\n\n\n\n","category":"method"},{"location":"#Chartmetric.parseresponse-Tuple{HTTP.Messages.Response}","page":"Home","title":"Chartmetric.parseresponse","text":"parseresponse(response::HTTP.Messages.Response)\n\nParses the response from the API to a Dict.\n\n\n\n\n\n","category":"method"}]
}
